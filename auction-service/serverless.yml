service: auction-service
frameworkVersion: '3'

package:
  individually: true

provider:
  name: aws
  region: us-east-1
  runtime: nodejs14.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - ${self:custom.tables.AuctionsTable.arn}
        - !Join [ "/", [ "${self:custom.tables.AuctionsTable.arn}", "index", "${self:custom.tables.AuctionsTable.index.byStatusEndingAt}" ] ]
    - Effect: Allow
      Action:
        - sqs:SendMessage
      Resource: ${self:custom.queues.MailQueue.arn}
    - Effect: Allow
      Action:
        - s3:PutObject
      Resource: arn:aws:s3:::${self:custom.buckets.AuctionsBucket.name}/*
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    NODE_OPTIONS: '--enable-source-maps --stack-trace-limit=1000'
    AUCTIONS_TABLE_NAME: ${self:custom.tables.AuctionsTable.name}
    AUCTIONS_INDEX_STATUS_ENDING_AT: ${self:custom.tables.AuctionsTable.index.byStatusEndingAt}
    MAIL_QUEUE_URL: ${self:custom.queues.MailQueue.url}
    AUCTIONS_BUCKET_NAME: ${self:custom.buckets.AuctionsBucket.name}

custom:
  tables:
    AuctionsTable:
      name: !Ref AuctionsTable
      arn: !GetAtt AuctionsTable.Arn
      index:
        byStatusEndingAt: "GSI-status-ending_at"
  queues:
    MailQueue:
      arn: ${cf:notification-service-${self:provider.stage}.MailQueueArn}
      url: ${cf:notification-service-${self:provider.stage}.MailQueueUrl}
  buckets:
    AuctionsBucket:
      name: auctions-bucket-d88a4d2b4799bcd2ccdb2d2e2929f09d-${self:provider.stage}
  authorizer:
    name: auth-service-${self:provider.stage}-auth
    arn: arn:aws:lambda:${self:provider.region}:${aws:accountId}:function:${self:custom.authorizer.name}
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude: ['aws-sdk']
    target: 'node14'
    define: 
      'require.resolve': undefined
    platform: 'node'
    concurrency: 10

functions:
  - ${file(./src/modules/auctions/functions.yml)}

resources:
  - ${file(./src/infra/AuctionsBucket.yml)}
  - ${file(./src/infra/AuctionsTable.yml)}

plugins: 
  - serverless-esbuild
  - serverless-iam-roles-per-function
      